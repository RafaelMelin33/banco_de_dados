CREATE TABLE tutor(
	id_tutor INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	nome VARCHAR(100) NOT NULL,
	endereco VARCHAR(150),
	telefone VARCHAR(15),
	email VARCHAR(100),
	data_nascimento DATE
);

CREATE TABLE paciente(
	id_paciente INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	nome VARCHAR(100) NOT NULL,
	especie VARCHAR(50) NOT NULL,
	raca VARCHAR(50),
	idade INTEGER,
	peso NUMERIC(15,2),
	id_tutor INTEGER NOT NULL,

	CONSTRAINT fk_tutor FOREIGN KEY (id_tutor)
	REFERENCES tutor(id_tutor)
);

CREATE TABLE veterinario(
	id_veterinario INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	nome VARCHAR(100) NOT NULL,
	especialidade VARCHAR(100),
	telefone VARCHAR(15),
	email VARCHAR(100)
);

CREATE TABLE agendamento(
	id_agendamento INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	data_hora TIMESTAMP NOT NULL,
	motivo VARCHAR(254),
	id_paciente INTEGER NOT NULL,
	id_veterinario INTEGER NOT NULL,
	
	CONSTRAINT fk_paciente FOREIGN KEY (id_paciente)
	REFERENCES paciente(id_paciente),
	
	CONSTRAINT fk_veterinario FOREIGN KEY (id_veterinario)
	REFERENCES veterinario(id_veterinario)
);

CREATE TABLE medicamentos(
	id_medicamento INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	nome VARCHAR(100) NOT NULL,
	descricao VARCHAR(254),
	preco NUMERIC(15,2),
	estoque INTEGER,
	categoria INTEGER
);

CREATE TABLE receita(
	id_receita INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	data_emissao DATE NOT NULL,
	id_agendamento INTEGER NOT NULL,
	
	CONSTRAINT fk_agendamento FOREIGN KEY (id_agendamento)
	REFERENCES agendamento(id_agendamento)
);

CREATE TABLE itens_receita(
	id_item_receita INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	id_receita INTEGER NOT NULL,
	id_medicamento INTEGER NOT NULL,
	quantidade INTEGER NOT NULL,
	dosagem VARCHAR(50),
	valor_total NUMERIC(15,2),
	
	CONSTRAINT fk_medicamento FOREIGN KEY (id_medicamento)
	REFERENCES medicamentos(id_medicamento)
);

--Insert em tutor

INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Enzo', 'joão dos silvares', '998237788', 'enzo.carvalho@gmail.com', '1990-03-15');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Diogo', 'rua do henrique', '996597263', 'diogo.lopez@gmail.com', '1985-07-22');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('João Pedro', 'rua do diogo', '997108324', 'j.p@gmail.com', '1992-11-10');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Lucas', 'rua das cores', '9cor-dautonico', 'lucas.coloridinho@gmail.com', '1993-02-28');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Rafael', 'la longe', '993802029', 'rafael.melin@gmail.com', '1989-12-05');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Henrique', 'lll', '9947195630', 'henrique@gmail.com', '1991-08-17');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Kauã', 'rua logo ali', '93847105', 'kaua.cardoso@gmail.com', '1994-03-01');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Mari', 'rua da lais', '996425318', 'g.mari@gmail.com', '1995-05-13');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Igor', 'rua dos capotes', '998421698', 'igor@gmail.com', '1987-09-30');
INSERT INTO tutor (nome, endereco, telefone, email, data_nascimento)
VALUES('Lais', 'rua 15k', '996485455', 'lais@gmail.com', '1990-06-25');


--Insert pacientes

INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Thor', 'tartaruga', 'cabeçuda', 101, 83.21, 1);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Thor', 'cachorro', 'pincher', 21, 10, 1);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Thor', 'gato', 'siames', 1, 0.3, 1);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Thor', 'papagaio', 'verdadeiro', 23, 2.09, 1);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Thor', 'calopsita', 'arlequim', 3, 1.5, 1);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Luna', 'cachorro', 'labrador', 5, 28.5, 2);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Bella', 'gato', 'persa', 3, 4.2, 3);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Max', 'cachorro', 'golden retriever', 7, 32.1, 4);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Nina', 'papagaio', 'amazônico', 15, 0.45, 5);
INSERT INTO paciente (nome, especie, raca, idade, peso, id_tutor)
VALUES('Mel', 'coelho', 'holandês', 2, 1.8, 6);

--Insert veterinarios

INSERT INTO veterinario (nome, especialidade, telefone, email)
VALUES('Dr. Enzo', 'cardiologia', '998237788', 'enzo.carvalho@gmail.com');
INSERT INTO veterinario (nome, especialidade, telefone, email)
VALUES('Dr. Henrique', 'oncologia', '994861576', 'henrique@gmail.com');
INSERT INTO veterinario (nome, especialidade, telefone, email)
VALUES('Dr. Diogo', 'dermatologia', '996157345', 'diogo.lopez@gmail.com');
INSERT INTO veterinario (nome, especialidade, telefone, email)
VALUES('Dra. Sofia', 'ortopedia', '992548763', 'sofia.vet@gmail.com');
INSERT INTO veterinario (nome, especialidade, telefone, email)
VALUES('Dra. Isabela', 'oftalmologia', '997836215', 'isabela.oliveira@vetclinic.com');

--Insert agendamento

INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025 10:05:00', 'rotina', 1, 1);
INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025 09:00:00', 'vacinação', 2, 1);
INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025 09:30:00', 'problema de pele', 3, 1);
INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025 08:00:00', 'parasita', 4, 1);
INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025 08:30:00', 'problemas respiratorios', 5, 1);
INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025', 'Exame de sangue', 1, 2);
INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025', 'rotina', 1, 2);
INSERT INTO agendamento (data_hora, motivo, id_paciente, id_veterinario)
VALUES('08-21-2025', 'Exame de sangue', 1, 3);



--Insert medicamentos

INSERT INTO medicamentos (nome, descricao, preco, estoque, categoria)
VALUES('Carprofeno', 'anti-inflamatório', 66.00, 10, 1);
INSERT INTO medicamentos (nome, descricao, preco, estoque, categoria)
VALUES('Ivermectina', 'antiparasitários', 34.00, 20, 1);
INSERT INTO medicamentos (nome, descricao, preco, estoque, categoria)
VALUES('Tramadol', 'analgésico opioide', 45.50, 15, 2);
INSERT INTO medicamentos (nome, descricao, preco, estoque, categoria)
VALUES('Enrofloxacino', 'antibiótico de amplo espectro', 28.90, 25, 2);
INSERT INTO medicamentos (nome, descricao, preco, estoque, categoria)
VALUES('Diazepam', 'ansiolítico e relaxante muscular', 39.75, 30, 3);
INSERT INTO medicamentos (nome, descricao, preco, estoque, categoria)
VALUES('Prednisona', 'corticoesteroide anti-inflamatório', 22.30, 50, 3);


--Insert receita

INSERT INTO receita (data_emissao, id_agendamento)
VALUES('2025-08-20', 1);
INSERT INTO receita (data_emissao, id_agendamento)
VALUES('2025-07-20', 2);
INSERT INTO receita (data_emissao, id_agendamento)
VALUES('2025-06-20', 3);
INSERT INTO receita (data_emissao, id_agendamento)
VALUES('2025-05-20', 4);
INSERT INTO receita (data_emissao, id_agendamento)
VALUES('2025-04-20', 5);
INSERT INTO receita (data_emissao, id_agendamento)
VALUES('2025-07-20', 8);

--Insert itens-receita

INSERT INTO itens_receita (id_receita,id_medicamento,dosagem,quantidade)
VALUES (2, 2, '10mg por dia', 2);
INSERT INTO itens_receita (id_receita, id_medicamento, dosagem, quantidade)
VALUES (1, 1, '5mg a cada 12 horas', 1);
INSERT INTO itens_receita (id_receita, id_medicamento, dosagem, quantidade)
VALUES (1, 3, '2mg a cada 8 horas', 3);
INSERT INTO itens_receita (id_receita, id_medicamento, dosagem, quantidade)
VALUES (2, 4, '50mg por dia durante 7 dias', 1);
INSERT INTO itens_receita (id_receita, id_medicamento, dosagem, quantidade)
VALUES (3, 5, '0.5mg por kg a cada 24 horas', 2);
INSERT INTO itens_receita (id_receita, id_medicamento, dosagem, quantidade)
VALUES (4, 5, '1 comprimido a cada 12 horas', 1);
INSERT INTO itens_receita (id_receita, id_medicamento, dosagem, quantidade)
VALUES (5, 2, '5mg por dia durante 14 dias', 2);

-- Coloca o preço total nos itens_receita
UPDATE itens_receita i SET valor_total = (SELECT preco FROM medicamentos WHERE medicamentos.id_medicamento = i.id_medicamento)*i.quantidade*1.1



SELECT MAX(m.estoque) AS MAIOR_ESTOQUE
	 , AVG(m.estoque) AS MEDIA_ESTOQUE 
	 , MAX(m.preco)   AS MAIOR_PRECO 
	 , MIN(m.preco)   AS MENOR_PRECO
	 , AVG(m.preco)   AS media_preco
  FROM medicamentos m
  
SELECT SUM(m.preco * m.estoque)
  FROM medicamentos m
  
SELECT COUNT(DISTINCT i.id_receita) AS qtd_receita
  FROM itens_receita i
  
-- ATIVIDADE 1
  
SELECT SUM(MEDICAMENTOS.ESTOQUE) AS TOTAL_ESTOQUE
  FROM MEDICAMENTOS
 
-- ATIVIDADE 2

SELECT AVG(EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM TUTOR.DATA_NASCIMENTO)) AS MEDIA_IDADES
  FROM RDB$DATABASE, TUTOR

-- ATIVIDADE 3
  
SELECT MIN(MEDICAMENTOS.PRECO) AS MENOR_PRECO_MEDICAMENTO
  FROM MEDICAMENTOS
  
-- ATIVIDADE 4
  
SELECT MAX(PACIENTE.PESO) AS MAIOR_PESO_PACIENTE
  FROM PACIENTE
  
-- ATIVIDADE 5
  
SELECT COUNT(TUTOR.ID_TUTOR) AS QTD_TUTORES
  FROM TUTOR
  
-- ATIVIDADE 6
    
SELECT SUM(M.PRECO * M.ESTOQUE) AS PRECO_ESTOQUE
	 , M.CATEGORIA 
  FROM MEDICAMENTOS M
 GROUP BY M.CATEGORIA

-- ATIVIDADE 7

--SELECT R.ID_RECEITA, (SELECT SUM(M.PRECO * I.QUANTIDADE)
--							  FROM MEDICAMENTOS M, ITENS_RECEITA I
--							 WHERE I.ID_RECEITA = R.ID_RECEITA AND M.ID_MEDICAMENTO = I.ID_MEDICAMENTO) AS TOTAL
--  FROM RECEITA R
-- GROUP BY R.ID_RECEITA
--HAVING (SELECT SUM(M.PRECO * I.QUANTIDADE)
--							  FROM MEDICAMENTOS M, ITENS_RECEITA I
--							 WHERE I.ID_RECEITA = R.ID_RECEITA AND M.ID_MEDICAMENTO = I.ID_MEDICAMENTO) > 100
SELECT I.ID_RECEITA, IR.ID_ITEM_RECEITA, IR.VALOR_TOTAL
  FROM RECEITA I
 INNER JOIN ITENS_RECEITA IR ON IR.ID_RECEITA = I.ID_RECEITA
 WHERE IR.VALOR_TOTAL > 100